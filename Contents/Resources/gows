#  -*- mode: unix-shell-script; -*-

_gows_config() {
	rcfiles=(/usr/etc/goenvrc /usr/local/etc/goenvrc ~/.goenvrc ./.goenvrc)
	packages=()
	
	for rc in ${rcfiles[*]}; do
		if [ -e $rc ]; then
			while read line; do
				packages=("${packages[@]}" $line)
			done <$rc
		fi
	done
}

_gows_exec() {
    case "$1" in
    add)
        if [ -z "$2" ]; then
            _gows_add `_gows_find_ws_path`
        else
            _gows_add `_gows_fullpath $2`
        fi
        ;;
    cd)
    	_gows_cd $2
    	;;
    edit)
        _gows_edit $2
        ;;
    init)
        if [ -z "$2" ]; then
            _gows_init $(pwd)
        else
            _gows_init `_gows_fullpath $2`
        fi
        ;;
    switch)
        if [ -z "$2" ]; then
            _gows_switch `_gows_find_ws_path`
        else
            _gows_switch `_gows_fullpath $2`
        fi
        ;;
    *)
        echo "Invalid command"
    esac
}

_gows_find_ws_path() {
    local WSPATH=$(pwd)
    while [[ "$WSPATH" != "" ]] && ! [[ -d "$WSPATH/bin" && -d "$WSPATH/pkg" && -d "$WSPATH/src" ]]; do
        WSPATH=${WSPATH%/*}
    done
    echo "$WSPATH"
}

_gows_fullpath() {
  case "$1" in
    /*)
        echo "$1"
        ;;
    *)
        echo "$PWD/$1"
        ;;
  esac
}

_gows_split() {
    OLDIFS="$IFS"
    IFS=$2
    items=(`echo $1`)
    IFS="$OLDIFS"
    echo $items
}

# Subcommands

_gows_add() {
    if [[ -n "$1" && -d "$1" ]]; then
		# Verify target is a Go workspace
		if [[ -d "$1/bin" && -d "$1/pkg" && -d "$1/src" ]]; then
			if [ -z "$_GOWS_OLD_PATH" ]; then
				# Workspace has not been set yet
				_gows_switch $1
			elif [[ ! "$GOPATH" =~  (^|:)"$1"(:|$) ]]; then
				# Add workspace
				if [ -n "$GOPATH" ]; then
					GOPATH=${1}:${GOPATH}
				else
					GOPATH=${1}
				fi
				export GOPATH
			
				PATH=${1}/bin:${PATH}
				export PATH
			else
				echo "Workspace already set"
			fi
		else
			echo "Not a Go workspace"
		fi
    else
        echo "Go workspace missing"
    fi
}

_gows_cd() {
	# Determine if relative or full path or package name
	case "$1" in
		/*)
			cd `_gows_fullpath $1`
			;;
		.*)
			cd "$1"
			;;
		*)
			cd `_gows_find_ws_path`/src/$1
			;;
	esac
	
	_gows_add `_gows_find_ws_path`
}

_gows_edit() {
    if [[ -n "$GOPATH" ]]; then
		if [ -z "$VISUAL" ]; then
			echo "VISUAL editor is not set"
			exit 1
		fi
		"$VISUAL" "`_gows_find_ws_path`/src/$1"
	else
		echo "Go workspace not set"
	fi
}

_gows_init() {
    if [ -n "$1" ]; then
        mkdir -p $1/bin $1/pkg $1/src
        _gows_add $1
        
        # Read configuration
        _gows_config
        
        # go get default packages
        for pkg in ${packages[*]}; do
        	echo "go get ${pkg}"
			go get "${pkg}"
        done
    else
        echo "Path does not exist"
    fi
}

_gows_list() {    
    if [[ -n "$GOPATH" ]]; then
        items=(`_gows_split $GOPATH ":"`)
        for item in "${items[@]}"; do
          echo "$item"
        done
    else
        echo "Go workspace not set"
    fi
}

_gows_reset() {
    if [ -n "$GOPATH" ]; then
        if [ -n "$_GOWS_OLD_PATH" ]; then
            PATH=$_GOWS_OLD_PATH
            export PATH
            unset _GOWS_OLD_PATH
        fi
        if [ -n "$_GOWS_OLD_GOPATH" ]; then
        	GOPATH=$_GOWS_OLD_GOPATH
        	export GOPATH
	        unset _GOWS_OLD_GOPATH
	    else
	    	unset GOPATH
	    fi
    else
        echo "Go workspace not set"
    fi
}

_gows_switch() {
	# Reset workspace if already set
	if [ -n "$_GOWS_OLD_PATH" ]; then
		_gows_reset
	fi
	
	# Cache original values before switching to allow reset
    if [[ -n "$1" && -d "$1" ]]; then
        _GOWS_OLD_PATH=$PATH
        export _GOWS_OLD_PATH
        
        if [ -n "$GOPATH" ]; then    
			_GOWS_OLD_GOPATH=$GOPATH
			export _GOWS_OLD_GOPATH
        fi
        
        _gows_add $1
    else
        echo "Go workspace missing"
    fi
}

_gows_which() {
    echo `_gows_find_ws_path`
}

# Command handler

gows() {
    cmd=$1
    
    case "$cmd" in
    cd | edit | switch)
    	_gows_exec $@
        ;;
	# Commands for list
    add | init)
    	shift
    	if [ $# -gt 0 ]; then
    		while (($#)); do
    			_gows_exec $cmd $1
    			shift
    		done
    	else
    		_gows_exec $cmd
    	fi
    	;;
    run)
    	shift
    	(
    		_gows_exec "switch"
    		if [ 0 -eq $? ]; then
    			$@
    		fi
    	)
    	;;
    reset     ) _gows_reset;;
    list      ) _gows_list;;
    which     ) _gows_which;;
    esac
}
